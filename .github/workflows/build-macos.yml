name: Build macOS

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - .mailmap
      - '**.md'
      - AUTHORS
      - doc/**
      - .github/**
      - '!.github/workflows/build-macos.yml'
  push:
    branches:
      - main
      - canary
      - v[0-9]+.x-staging
      - v[0-9]+.x
    paths-ignore:
      - .mailmap
      - '**.md'
      - AUTHORS
      - doc/**
      - .github/**
      - '!.github/workflows/build-macos.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.12'
  FLAKY_TESTS: keep_retrying

permissions:
  contents: read

jobs:
  build-macOS:
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x64
            brew-dir: /usr/local/opt
          - os: macos-14
            arch: aarch64
            brew-dir: /opt/homebrew/opt
    runs-on: ${{ matrix.os }}
    env:
      CC: sccache ${{ matrix.brew-dir }}/llvm@18/bin/clang
      CXX: sccache ${{ matrix.brew-dir }}/llvm@18/bin/clang++
      LIBTOOL: ${{ matrix.brew-dir }}/llvm@18/bin/llvm-libtool-darwin
      SCCACHE_GHA_ENABLED: 'true'
      LDFLAGS: '-Wl,-ld_classic'
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b  # v4.1.4
        with:
          persist-credentials: false
      - name: Set up sccache
        uses: mozilla-actions/sccache-action@v0.0.9
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d  # v5.1.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - run: brew update && brew install ninja && brew install cmake
      - run: brew install llvm@18
      - name: Environment Information
        run: npx envinfo
      - name: Configure
        run: ./configure --without-npm --without-corepack --ninja --enable-mimalloc --enable-lto
      - name: Build
        run: make -j$(getconf _NPROCESSORS_ONLN)
      - name: Quick test
        run: ./out/Release/node -e 'console.log("test")'
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: node-darwin-${{ matrix.arch }}
          path: out/Release/node
          if-no-files-found: error

# TODO: add these tests
# output = shell_output("#{bin}/node -e 'console.log(new Intl.NumberFormat(\"en-EN\").format(1234.56))'").strip
# assert_equal "1,234.56", output

# output = shell_output("#{bin}/node -e 'console.log(new Intl.NumberFormat(\"de-DE\").format(1234.56))'").strip
# assert_equal "1.234,56", output
